;; Auto-generated. Do not edit!


(when (boundp 'actions_tutorial::DockResult)
  (if (not (find-package "ACTIONS_TUTORIAL"))
    (make-package "ACTIONS_TUTORIAL"))
  (shadow 'DockResult (find-package "ACTIONS_TUTORIAL")))
(unless (find-package "ACTIONS_TUTORIAL::DOCKRESULT")
  (make-package "ACTIONS_TUTORIAL::DOCKRESULT"))

(in-package "ROS")
;;//! \htmlinclude DockResult.msg.html


(defclass actions_tutorial::DockResult
  :super ros::object
  :slots (_docking_status ))

(defmethod actions_tutorial::DockResult
  (:init
   (&key
    ((:docking_status __docking_status) (let (r) (dotimes (i 0) (push "" r)) r))
    )
   (send-super :init)
   (setq _docking_status __docking_status)
   self)
  (:docking_status
   (&optional __docking_status)
   (if __docking_status (setq _docking_status __docking_status)) _docking_status)
  (:serialization-length
   ()
   (+
    ;; string[] _docking_status
    (apply #'+ (mapcar #'(lambda (x) (+ 4 (length x))) _docking_status)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string[] _docking_status
     (write-long (length _docking_status) s)
     (dolist (elem _docking_status)
       (write-long (length elem) s) (princ elem s)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string[] _docking_status
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _docking_status (make-list n))
     (dotimes (i n)
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setf (elt _docking_status i) (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
     ))
   ;;
   self)
  )

(setf (get actions_tutorial::DockResult :md5sum-) "a47488ee9e6264003cfa058af9eb8e93")
(setf (get actions_tutorial::DockResult :datatype-) "actions_tutorial/DockResult")
(setf (get actions_tutorial::DockResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Result
string[] docking_status


")



(provide :actions_tutorial/DockResult "a47488ee9e6264003cfa058af9eb8e93")


